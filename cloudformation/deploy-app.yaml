AWSTemplateFormatVersion: 2010-09-09
Description: SitC
Parameters:
  KeyPairName:
    Description: Keypair associated with the EC2 instance.
    Type: "AWS::EC2::KeyPair::KeyName"
    MinLength: "1"
    ConstraintDescription: Must provide a keypair to be associated with the EC2 instance
  InstanceType:
    Description: EC2 instance type.
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t3.micro
      - t3.small
      - t3.medium
  Cidr:
    Description: The IP address range that can be used to connect, leave 0.0.0.0/0 to connect from any address.
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: CIDR must be in the form X.X.X.X/Y where X.X.X.X is an IP address and Y is the lenght of the mask.
  WorkstationTemplateUrl:
    Description: URL of the cloudformation template used when deploying workstations.
    Type: String
    Default: https://ue5-workstation-cloudformation.s3.us-west-1.amazonaws.com/deploy-sitc.yaml
  UserPasswd:
    Description: >-
      Password for the web app.
    MinLength: "8"
    Type: String
    AllowedPattern: >-
      ^((?=.*[a-z])(?=.*[A-Z])(?=.*[\d])|(?=.*[a-z])(?=.*[A-Z])(?=.*[\W_])|(?=.*[a-z])(?=.*[\d])(?=.*[\W_])|(?=.*[A-Z])(?=.*[\d])(?=.*[\W_])).+$
    ConstraintDescription: >-
      Password must contain at least one element from three of the following
      sets: lowercase letters, uppercase letters, base 10 digits,
      non-alphanumeric characters
    NoEcho: "true"
Mappings:
  RegionMap:
    us-east-1:
      ue5Demo: ami-0fb9d541c8a9f2928
    us-west-1:
      ue5Demo: ami-xxxxxxxxxxxxxxxxx
    us-west-2:
      ue5Demo: ami-xxxxxxxxxxxxxxxxx
    us-east-2:
      ue5Demo: ami-xxxxxxxxxxxxxxxxx
    eu-central-1:
      ue5Demo: ami-xxxxxxxxxxxxxxxxx
    eu-west-1:
      ue5Demo: ami-xxxxxxxxxxxxxxxxx
    eu-west-2:
      ue5Demo: ami-xxxxxxxxxxxxxxxxx
    eu-west-3:
      ue5Demo: ami-xxxxxxxxxxxxxxxxx
    eu-north-1:
      ue5Demo: ami-xxxxxxxxxxxxxxxxx
Resources:
  AppInstance:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref RootInstanceProfile
      ImageId: !FindInMap
        - RegionMap
        - !Ref "AWS::Region"
        - ue5Demo
      SecurityGroupIds:
        - !Ref SitCSecurityGroup
      Tags:
        - Key: UE5
          Value: Workstation
      KeyName: !Ref KeyPairName
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          dnf install -y pip
          pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-latest.tar.gz
          cd /opt/UE5WorkstationApp
          KEY=$(echo $RANDOM | md5sum | head -c 20; echo;)
          ./back/cumulus init --api-key $KEY --admin-name Administrator --admin-password ${UserPasswd}
          export PATH=/opt/aws/bin:$PATH
          cfn-init -v -r AppInstance --region ${AWS::Region} --configsets get_env -s ${AWS::StackName}
    Metadata:
      "AWS::CloudFormation::Init":
        configSets:
          get_env:
            - download
        download:
          files:
            /opt/UE5WorkstationApp/env.default:
              content: !Sub |
                PATH=/usr/local/bin:/usr/bin
                AWS_TEMPLATE_URL=${WorkstationTemplateUrl}
                AWS_DEFAULT_REGION=${AWS::Region}
                GIN_MODE=release
      "AWS::CloudFormation::Designer":
        id: e5cac32e-b5c6-46ba-9430-1f9b7275b5b6
  RootRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: /
    Metadata:
      "AWS::CloudFormation::Designer":
        id: 6f9e3cf3-dc65-4bcc-a7aa-298486effe69
  RolePolicies:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: SitCDeployAccess
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - "logs:*"
              - "s3:*"
              - "ec2:ModifyInstanceMetadataOptions"
              - "s3:GetObject"
              - "cloudformation:ListStacks"
              - "cloudformation:DescribeStackEvents"
              - "cloudformation:CreateStack"
              - "ec2:DescribeKeyPairs"
              - "cloudformation:DescribeStacks"
              - "cloudformation:DeleteStack"
              - "ec2:CreateSecurityGroup"
              - "iam:CreateRole"
              - "ec2:DescribeSecurityGroups"
              - "ec2:DeleteSecurityGroup"
              - "iam:DeleteRole"
              - "ec2:AuthorizeSecurityGroupIngress"
              - "iam:CreateInstanceProfile"
              - "iam:PutRolePolicy"
              - "iam:GetRolePolicy"
              - "iam:RemoveRoleFromInstanceProfile"
              - "iam:DeleteRolePolicy"
              - "iam:DeleteInstanceProfile"
              - "iam:AddRoleToInstanceProfile"
              - "ec2:RunInstances"
              - "ec2:StartInstances"
              - "ec2:StopInstances"
              - "ec2:TerminateInstances"
              - "ec2:DescribeInstances"
              - "ec2:CreateTags"
              - "ec2:CreateKeyPair"
              - "EC2:DeleteKeyPair"
              - "EC2:DescribeVolumes"
              - "cloudformation:DescribeStackResources"
            Resource: "*"
          - Effect: Allow
            Action:
              - "iam:PassRole"
            Resource: !Join
              - ""
              - - "arn:aws:iam::"
                - !Ref AWS::AccountId
                - ":role/*-RootRole-*"
            Condition:
              StringEquals:
                iam:PassedToService: "ec2.amazonaws.com"
      Roles:
        - !Ref RootRole
    Metadata:
      "AWS::CloudFormation::Designer":
        id: 7160187f-0a7e-451f-bcb1-85783245c504
  RootInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: /
      Roles:
        - !Ref RootRole
    Metadata:
      "AWS::CloudFormation::Designer":
        id: a36c5fb2-26ae-49c8-bffb-628118f2cd10
  SitCSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: SitC Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: "22"
          ToPort: "22"
          CidrIp: !Ref Cidr
        - IpProtocol: tcp
          FromPort: "80"
          ToPort: "80"
          CidrIp: !Ref Cidr
        - IpProtocol: tcp
          FromPort: "9100"
          ToPort: "9100"
          CidrIp: !Ref Cidr
Outputs:
  AppInstanceId:
    Value: !Ref AppInstance
  AppPublicDNS:
    Value: !GetAtt
      - AppInstance
      - PublicDnsName
    Description: DNS Name of the newly created EC2 instance
  AppPublicIp:
    Value: !GetAtt
      - AppInstance
      - PublicIp
    Description: Public Ip of the newly created EC2 instance
  AppURL:
    Value: !Join
      - ""
      - - "http://"
        - !GetAtt
          - AppInstance
          - PublicIp
    Description: UE5 Workstation Application URL.
Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: Credentials
        Parameters:
          - UserPasswd
      - Label:
          default: EC2
        Parameters:
          - InstanceType
          - DiskSize
          - KeyPairName
      - Label:
          default: Other
        Parameters:
          - Cidr
          - WorkstationTemplateUrl
    ParameterLabels:
      InstanceType:
        default: "Instance Type:"
      DiskSize:
        default: "Disk Size:"
      KeyPairName:
        default: "Key pair name:"
      UserPasswd:
        default: "Password:"
      Cidr:
        default: "IP Address Range (CIDR):"
      WorkstationTemplateUrl:
        default: "Workstation Template URL:"
